{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabsArr","selectedTabId","setTabId","selecetedContent","find","tab","id","newContent","content","undefined","className","map","href","onClick","role","onKeyDown","title","tabs","App","useState","setSelectedTabId","tabId","ReactDOM","render","document","getElementById"],"mappings":"iMAgBaA,EAAuB,SAAC,GAI9B,IAHLC,EAGI,EAHJA,QACAC,EAEI,EAFJA,cACAC,EACI,EADJA,SAEMC,EAAmBH,EAAQI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,KAEpDM,EAAU,OAAGJ,QAAH,IAAGA,OAAH,EAAGA,EAAkBK,QAMnC,YAJmBC,IAAfF,IACFA,EAAaP,EAAQ,GAAGQ,SAIxB,qCACE,qBAAKE,UAAU,gBAAgB,UAAQ,aAAvC,SACE,6BACGV,EAAQW,KAAI,SAACN,GACZ,OACE,oBAEEK,UAAWT,IAAkBI,EAAIC,GAAK,YAAc,GAFtD,SAIE,mBACE,UAAQ,UACRM,KAAI,WAAMX,GACVY,QAAS,kBAAMX,EAASG,EAAIC,KAE5BQ,KAAK,SACLC,UAAW,kBAAMb,EAASG,EAAIC,KANhC,SAQGD,EAAIW,OAJAX,EAAIC,KAPND,EAAIC,WAmBnB,qBAAKI,UAAU,QAAQ,UAAQ,aAA/B,SACE,sBAAM,UAAQ,cAAd,SACGH,UCnDEU,EAAO,CAClB,CAAEX,GAAI,QAASU,MAAO,QAASR,QAAS,eACxC,CAAEF,GAAI,QAASU,MAAO,QAASR,QAAS,eACxC,CAAEF,GAAI,QAASU,MAAO,QAASR,QAAS,gBAG7BU,EAAgB,WAC3B,MAA0CC,mBAASF,EAAK,GAAGX,IAA3D,mBAAOL,EAAP,KAAsBmB,EAAtB,KAMA,OACE,sBAAKV,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBT,KAGtB,cAAC,EAAD,CACEA,cAAeA,EACfD,QAASiB,EACTf,SAboB,SAACmB,GACzBD,EAAiBC,UCbrBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.402f6080.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\n\ninterface Type {\n  tabsArr: {\n    id: string;\n    title: string;\n    content: string;\n  }[],\n\n  selectedTabId: string,\n\n  setTabId: (tabId: string)=> void,\n\n}\n\nexport const Tabs: React.FC<Type> = ({\n  tabsArr,\n  selectedTabId,\n  setTabId,\n}) => {\n  const selecetedContent = tabsArr.find(tab => tab.id === selectedTabId);\n\n  let newContent = selecetedContent?.content;\n\n  if (newContent === undefined) {\n    newContent = tabsArr[0].content;\n  }\n\n  return (\n    <>\n      <div className=\"tabs is-boxed\" data-cy=\"TabContent\">\n        <ul>\n          {tabsArr.map((tab) => {\n            return (\n              <li\n                key={tab.id}\n                className={selectedTabId === tab.id ? 'is-active' : ''}\n              >\n                <a\n                  data-cy=\"TabLink\"\n                  href={`#${selectedTabId}`}\n                  onClick={() => setTabId(tab.id)}\n                  key={tab.id}\n                  role=\"button\"\n                  onKeyDown={() => setTabId(tab.id)}\n                >\n                  {tab.title}\n                </a>\n              </li>\n\n            );\n          })}\n        </ul>\n      </div>\n      <div className=\"block\" data-cy=\"TabContent\">\n        <span data-cy=\"tab-content\">\n          {newContent}\n        </span>\n\n      </div>\n    </>\n\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n\n  const handleSelectedTab = (tabId: string) => {\n    setSelectedTabId(tabId);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTabId}`}\n      </h1>\n\n      <Tabs\n        selectedTabId={selectedTabId}\n        tabsArr={tabs}\n        setTabId={handleSelectedTab}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}