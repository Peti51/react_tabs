{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabsArr","selectedTabId","onTabSelected","selecetedContent","className","map","tab","id","onClick","role","tabIndex","onKeyDown","tabs","title","content","App","useState","setSelectedTabId","tabId","ReactDOM","render","document","getElementById"],"mappings":"iMAkBaA,EAAuB,SAAC,GAK9B,IAJLC,EAII,EAJJA,QACAC,EAGI,EAHJA,cACAC,EAEI,EAFJA,cACAC,EACI,EADJA,iBAEA,OACE,qCACE,qBAAKC,UAAU,gBAAgB,UAAQ,aAAvC,SACE,6BACGJ,EAAQK,KAAI,SAACC,GACZ,OACE,oBAAIF,UAAWH,IAAkBK,EAAIC,GAAK,YAAc,GAAxD,SACE,mBACEC,QAAS,kBAAMN,EAAcI,EAAIC,KAEjCE,KAAK,SACLC,SAAU,EACVC,UAAW,kBAAMT,EAAcI,EAAIC,KALrC,SAOGD,EAAIC,IALAD,EAAIC,aAarB,qBAAKH,UAAU,QAAQ,UAAQ,aAA/B,SACGD,QCzCIS,EAAO,CAClB,CAAEL,GAAI,QAASM,MAAO,QAASC,QAAS,eACxC,CAAEP,GAAI,QAASM,MAAO,QAASC,QAAS,eACxC,CAAEP,GAAI,QAASM,MAAO,QAASC,QAAS,gBAG7BC,EAAgB,WAC3B,MAA0CC,mBAASJ,EAAK,GAAGL,IAA3D,mBAAON,EAAP,KAAsBgB,EAAtB,KACId,EAAmBS,EAAK,GAAGE,QAE/BF,EAAKP,KAAI,SAACC,GAKR,OAJIA,EAAIC,KAAON,IACbE,EAAmBG,EAAIQ,SAGlB,KAOT,OACE,sBAAKV,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBH,KAGtB,cAAC,EAAD,CACEA,cAAeA,EACfD,QAASY,EACTV,cAboB,SAACgB,GACzBD,EAAiBC,IAabf,iBAAkBA,QCnC1BgB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.9ef544b4.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\n\ninterface Type {\n  tabsArr: {\n    id: string;\n    title: string;\n    content: string;\n  }[],\n\n  selectedTabId: string,\n\n  onTabSelected: (tabId: string)=> void,\n\n  selecetedContent: string;\n\n}\n\nexport const Tabs: React.FC<Type> = ({\n  tabsArr,\n  selectedTabId,\n  onTabSelected,\n  selecetedContent,\n}) => {\n  return (\n    <>\n      <div className=\"tabs is-boxed\" data-cy=\"TabContent\">\n        <ul>\n          {tabsArr.map((tab) => {\n            return (\n              <li className={selectedTabId === tab.id ? 'is-active' : ''}>\n                <a\n                  onClick={() => onTabSelected(tab.id)}\n                  key={tab.id}\n                  role=\"button\"\n                  tabIndex={0}\n                  onKeyDown={() => onTabSelected(tab.id)}\n                >\n                  {tab.id}\n                </a>\n              </li>\n\n            );\n          })}\n        </ul>\n      </div>\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selecetedContent}\n      </div>\n    </>\n\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n  let selecetedContent = tabs[0].content;\n\n  tabs.map((tab) => {\n    if (tab.id === selectedTabId) {\n      selecetedContent = tab.content;\n    }\n\n    return 0;\n  });\n\n  const handleSelectedTab = (tabId: string) => {\n    setSelectedTabId(tabId);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTabId}`}\n      </h1>\n\n      <Tabs\n        selectedTabId={selectedTabId}\n        tabsArr={tabs}\n        onTabSelected={handleSelectedTab}\n        selecetedContent={selecetedContent}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}